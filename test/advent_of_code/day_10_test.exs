defmodule AdventOfCode.Day10Test do
  use ExUnit.Case

  import AdventOfCode.Day10

  # @tag :skip
  test "part1" do
    assert {_, 8} = part1(".#..#\n.....\n#####\n....#\n...##")

    assert {_, 33} =
             part1(
               "......#.#.\n#..#.#....\n..#######.\n.#.#.###..\n.#..#.....\n..#....#.#\n#..#....#.\n.##.#..###\n##...#..#.\n.#....####"
             )

    assert {_, 35} =
             part1(
               "#.#...#.#.\n.###....#.\n.#....#...\n##.#.#.#.#\n....#.#.#.\n.##..###.#\n..#...##..\n..##....##\n......#...\n.####.###."
             )

    assert {_, 41} =
             part1(
               ".#..#..###\n####.###.#\n....###.#.\n..###.##.#\n##.##.#.#.\n....###..#\n..#.#..#.#\n#..#.#.###\n.##...##.#\n.....#.#.."
             )

    assert {_, 210} =
             part1(
               ".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##"
             )
  end

  @tag :skip
  test "part2" do
    input =
      ".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##"

    assert {{11, 12}, _} = Enum.at(input, 1 - 1)
    assert {{12, 1}, _} = Enum.at(input, 2 - 1)
    assert {{12, 2}, _} = Enum.at(input, 3 - 1)
    assert {{16, 0}, _} = Enum.at(input, 20 - 1)
    assert {{8, 2}, _} = Enum.at(input, 200 - 1)
  end
end
